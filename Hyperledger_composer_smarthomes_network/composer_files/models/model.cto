/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.blockchain.model


/**
 *A participant of type home in the network
 */
participant Home identified by homeId {
  o   String homeId
  -->   Owner	 homeOwner
  o   Address   address
  --> Service[] services optional
  --> Device[] devices optional 
}
/**
 *A participant of type Service in the network
 */
participant Service identified by serviceId{
  o   String serviceId
  o   String serviceName
}

/**
 *A participant of type Owner in the network
 */
participant Owner identified by personId{
 o  String personId
 o  String  firstname optional
 o  String  lastname optional
}

/**
 *An asset of type Device in the network
 */
participant Device identified by deviceId{
  o     String    deviceId
  -->   Home		  home 
  o	    String	  deviceLocation
  o     Double   minimumTemperature
  o     Double   maximumTemperature
  o     String    nickname 
  o     DeviceReading[]   deviceReadings optional 
}

abstract transaction DeviceTransaction{
	--> Device device
}

concept Address{
  o String  street
  o String  city
}

transaction DeviceReading extends DeviceTransaction{
  	o	Double	temperature
    o	String	readingTime
    o	String	readingDate
}

transaction AddingHome{
  --> Home  home
}

transaction AddDevice extends DeviceTransaction{
}

event HomeAdded{
--> Owner homeOwner
--> Home  home
  o String  message
}

event DeviceAdded{
--> Device device
o String message
}

event DeviceReadingSent{
  o String    message
  --> Device  device
}

event TemperatureThresholdEvent{
   o String message
   o Double temperature
   o String readingTime 
}


transaction SetupDemo{

}